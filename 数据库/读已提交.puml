@startuml READ-COMMITTED
header READ COMMITTED
footer 图尾 %page% of %lastpage%
title : READ COMMITTED-1

box #LightBlue
participant 事务A as A
database 数据库 as DB
participant 事务B as B
end box
collections 其他业务A as O
collections 其他业务B as O2
actor 用户 as U

note over of DB : 准备工作:\n-- 设置锁超时时长\nSET innodb_lock_wait_timeout = 100;\nSHOW VARIABLES LIKE 'innodb_lock_wait_timeout';\n-- 修改隔离级别-读已提交\nSET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED\nSELECT @@TX_ISOLATION;
A -> DB : 准备工作
B -> DB : 准备工作
== 解决脏读问题 ==
A -> DB : BEGIN 
activate A
B -> DB : BEGIN 
activate B
A -> DB : SELECT score FROM t_student_score WHERE id = 1;
DB --> A : 返回分数 : 1
A -> DB : UPDATE t_student_score SET score = score + 10 WHERE id = 1;
DB --> A : 修改成功

B -> DB : SELECT score FROM t_student_score WHERE id = 1;
DB -[#green]-> B : 返回分数 : 1
B -[#green]> O : 把分数(1) 提交给其他业务
B -> DB : COMMIT
deactivate B
A -> DB : ROLLBACK
deactivate A
......
...After a long time...
......
U -> DB : 从数据库看看成绩
U <-- DB : 返回分数(1)
U -> O : 从其他业务看看成绩
U <-[#green]- O : 返回分数(1)
U -> U : 两个地方的数据对上了
newpage READ COMMITTED-2
== 引发不可重复读问题 ==
note over of DB : 模拟场景: 事务A对记录进行修改, 修改过程中事务B读取, \n把读到的值提交给其他业务A, 事务A修改完成后进行提交, 此时B再次读取, \n再把结果提交给其他业务B, 两次读取到的值不不一致
A -> DB : BEGIN 
activate A
B -> DB : BEGIN 
activate B
A -> DB : SELECT score FROM t_student_score WHERE id = 1;
DB --> A : 返回分数 : 1
A -> DB : UPDATE t_student_score SET score = score + 10 WHERE id = 1;
DB --> A : 修改成功
B -> DB : 第一次读\nSELECT score FROM t_student_score WHERE id = 1;
DB -[#blue]-> B : 返回分数 : 1
B -[#blue]> O : 把分数(1) 提交给其他业务A
A -> DB : COMMIT
deactivate A
B -> DB : 第二次读\nSELECT score FROM t_student_score WHERE id = 1;
DB -[#blue]-> B : 返回分数 : 11
B -[#blue]> O2 : 把分数(11) 提交给其他业务B
B -> DB : COMMIT
deactivate B
......
...After a long time...
......
U -> O : 从其他业务A看看成绩
U <-[#blue]- O : 返回分数(1)
U -> O2 : 从其他业务B看看成绩
U <-[#blue]- O2 : 返回分数(11)
U -> U : 两个地方的数据不一致啊
@enduml